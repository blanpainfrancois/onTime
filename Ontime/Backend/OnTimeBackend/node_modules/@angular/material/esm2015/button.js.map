{"version":3,"file":"button.js","sources":["../../packages/material/button/button.js","../../packages/material/button/button-module.js","../../packages/material/button/index.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, Directive, ElementRef, forwardRef, Inject, Optional, Renderer2, Self, ViewEncapsulation, } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { mixinColor, mixinDisabled, mixinDisableRipple } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MatButtonCssMatStyler {\n}\nMatButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[mat-button], a[mat-button]',\n                host: { 'class': 'mat-button' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMatButtonCssMatStyler.ctorParameters = () => [];\nfunction MatButtonCssMatStyler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatButtonCssMatStyler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatButtonCssMatStyler.ctorParameters;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MatRaisedButtonCssMatStyler {\n}\nMatRaisedButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[mat-raised-button], a[mat-raised-button]',\n                host: { 'class': 'mat-raised-button' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMatRaisedButtonCssMatStyler.ctorParameters = () => [];\nfunction MatRaisedButtonCssMatStyler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatRaisedButtonCssMatStyler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatRaisedButtonCssMatStyler.ctorParameters;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MatIconButtonCssMatStyler {\n}\nMatIconButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[mat-icon-button], a[mat-icon-button]',\n                host: { 'class': 'mat-icon-button' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMatIconButtonCssMatStyler.ctorParameters = () => [];\nfunction MatIconButtonCssMatStyler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatIconButtonCssMatStyler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatIconButtonCssMatStyler.ctorParameters;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MatFab {\n    /**\n     * @param {?} button\n     * @param {?} anchor\n     */\n    constructor(button, anchor) {\n        // Set the default color palette for the mat-fab components.\n        (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n}\nMatFab.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[mat-fab], a[mat-fab]',\n                host: { 'class': 'mat-fab' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMatFab.ctorParameters = () => [\n    { type: MatButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MatButton),] },] },\n    { type: MatAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MatAnchor),] },] },\n];\nfunction MatFab_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatFab.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatFab.ctorParameters;\n}\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * \\@docs-private\n */\nexport class MatMiniFab {\n    /**\n     * @param {?} button\n     * @param {?} anchor\n     */\n    constructor(button, anchor) {\n        // Set the default color palette for the mat-mini-fab components.\n        (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n}\nMatMiniFab.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[mat-mini-fab], a[mat-mini-fab]',\n                host: { 'class': 'mat-mini-fab' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMatMiniFab.ctorParameters = () => [\n    { type: MatButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MatButton),] },] },\n    { type: MatAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MatAnchor),] },] },\n];\nfunction MatMiniFab_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatMiniFab.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatMiniFab.ctorParameters;\n}\n/**\n * \\@docs-private\n */\nexport class MatButtonBase {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n}\nfunction MatButtonBase_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatButtonBase.prototype._renderer;\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\nexport const /** @type {?} */ _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nexport class MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?} _focusMonitor\n     */\n    constructor(renderer, elementRef, _platform, _focusMonitor) {\n        super(renderer, elementRef);\n        this._platform = _platform;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the button is round.\n         */\n        this._isRoundButton = this._hasAttributeWithPrefix('fab', 'mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this._isIconButton = this._hasAttributeWithPrefix('icon-button');\n        this._focusMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    focus() {\n        this._getHostElement().focus();\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes with a 'mat-' prefix.\n     * @param {...?} unprefixedAttributeNames\n     * @return {?}\n     */\n    _hasAttributeWithPrefix(...unprefixedAttributeNames) {\n        // If not on the browser, say that there are none of the attributes present.\n        // Since these only affect how the ripple displays (and ripples only happen on the client),\n        // detecting these attributes isn't necessary when not on the browser.\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        return unprefixedAttributeNames.some(suffix => {\n            return this._getHostElement().hasAttribute('mat-' + suffix);\n        });\n    }\n}\nMatButton.decorators = [\n    { type: Component, args: [{selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab]`,\n                exportAs: 'matButton',\n                host: {\n                    '[disabled]': 'disabled || null',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"_isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]),.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMatButton.ctorParameters = () => [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: Platform, },\n    { type: FocusMonitor, },\n];\nfunction MatButton_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatButton.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatButton.ctorParameters;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype._isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype._isIconButton;\n    /** @type {?} */\n    MatButton.prototype._platform;\n    /** @type {?} */\n    MatButton.prototype._focusMonitor;\n}\n/**\n * Raised Material design button.\n */\nexport class MatAnchor extends MatButton {\n    /**\n     * @param {?} platform\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(platform, focusMonitor, elementRef, renderer) {\n        super(renderer, elementRef, platform, focusMonitor);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.decorators = [\n    { type: Component, args: [{selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span><div matRipple class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"_isIconButton\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div><div class=\\\"mat-button-focus-overlay\\\"></div>\",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]),.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]),.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}\"],\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMatAnchor.ctorParameters = () => [\n    { type: Platform, },\n    { type: FocusMonitor, },\n    { type: ElementRef, },\n    { type: Renderer2, },\n];\nfunction MatAnchor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatAnchor.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatAnchor.ctorParameters;\n}\n//# sourceMappingURL=button.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { MatAnchor, MatButton, MatMiniFab, MatButtonCssMatStyler, MatFab, MatIconButtonCssMatStyler, MatRaisedButtonCssMatStyler } from './button';\nexport class MatButtonModule {\n}\nMatButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    A11yModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatMiniFab,\n                    MatFab,\n                    MatCommonModule,\n                    MatButtonCssMatStyler,\n                    MatRaisedButtonCssMatStyler,\n                    MatIconButtonCssMatStyler,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                    MatMiniFab,\n                    MatFab,\n                    MatButtonCssMatStyler,\n                    MatRaisedButtonCssMatStyler,\n                    MatIconButtonCssMatStyler,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMatButtonModule.ctorParameters = () => [];\nfunction MatButtonModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatButtonModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatButtonModule.ctorParameters;\n}\n//# sourceMappingURL=button-module.js.map","/**\n * Generated bundle index. Do not edit.\n */\nexport { MatButtonModule, MatButtonCssMatStyler, MatRaisedButtonCssMatStyler, MatIconButtonCssMatStyler, MatFab, MatMiniFab, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor } from './public-api';\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}