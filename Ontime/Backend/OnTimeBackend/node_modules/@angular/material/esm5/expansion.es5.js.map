{"version":3,"file":"expansion.es5.js","sources":["../../packages/material/esm5/expansion/accordion.js","../../packages/material/esm5/expansion/accordion-item.js","../../packages/material/esm5/expansion/expansion-panel.js","../../packages/material/esm5/expansion/expansion-panel-header.js","../../packages/material/esm5/expansion/expansion-module.js","../../packages/material/esm5/expansion/index.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Directive, Input } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n/**\n * Unique ID counter\n */\nvar nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nvar CdkAccordion = (function () {\n    function CdkAccordion() {\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = \"cdk-accordion-\" + nextId++;\n        this._multi = false;\n        this._hideToggle = false;\n        /**\n         * The display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *   default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the reset of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n    }\n    Object.defineProperty(CdkAccordion.prototype, \"multi\", {\n        /**\n         * Whether the accordion should allow multiple expanded accordion items simulateously.\n         * @return {?}\n         */\n        get: function () { return this._multi; },\n        /**\n         * @param {?} multi\n         * @return {?}\n         */\n        set: function (multi) { this._multi = coerceBooleanProperty(multi); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkAccordion.prototype, \"hideToggle\", {\n        /**\n         * Whether the expansion indicator should be hidden.\n         * @return {?}\n         */\n        get: function () { return this._hideToggle; },\n        /**\n         * @param {?} show\n         * @return {?}\n         */\n        set: function (show) { this._hideToggle = coerceBooleanProperty(show); },\n        enumerable: true,\n        configurable: true\n    });\n    CdkAccordion.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-accordion, [cdk-accordion]',\n                    exportAs: 'cdkAccordion',\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    CdkAccordion.ctorParameters = function () { return []; };\n    CdkAccordion.propDecorators = {\n        'multi': [{ type: Input },],\n        'hideToggle': [{ type: Input },],\n        'displayMode': [{ type: Input },],\n    };\n    return CdkAccordion;\n}());\nexport { CdkAccordion };\nfunction CdkAccordion_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CdkAccordion.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CdkAccordion.ctorParameters;\n    /** @type {?} */\n    CdkAccordion.propDecorators;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /** @type {?} */\n    CdkAccordion.prototype._multi;\n    /** @type {?} */\n    CdkAccordion.prototype._hideToggle;\n    /**\n     * The display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *   default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the reset of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    CdkAccordion.prototype.displayMode;\n}\n/**\n * Directive for a Material Design Accordion.\n */\nvar MatAccordion = (function (_super) {\n    tslib_1.__extends(MatAccordion, _super);\n    function MatAccordion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatAccordion.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    host: {\n                        class: 'mat-accordion'\n                    }\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatAccordion.ctorParameters = function () { return []; };\n    return MatAccordion;\n}(CdkAccordion));\nexport { MatAccordion };\nfunction MatAccordion_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatAccordion.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatAccordion.ctorParameters;\n}\n//# sourceMappingURL=accordion.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Output, EventEmitter, Input, Injectable, Optional, ChangeDetectorRef, } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { CdkAccordion } from './accordion';\n/**\n * Used to generate unique ID for each expansion panel.\n */\nvar nextId = 0;\n/**\n * An abstract class to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nvar AccordionItem = (function () {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    function AccordionItem(accordion, _changeDetectorRef, _expansionDispatcher) {\n        var _this = this;\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = \"cdk-accordion-child-\" + nextId++;\n        /**\n         * Unregister function for _expansionDispatcher *\n         */\n        this._removeUniqueSelectionListener = function () { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen(function (id, accordionId) {\n                if (_this.accordion && !_this.accordion.multi &&\n                    _this.accordion.id === accordionId && _this.id !== id) {\n                    _this.expanded = false;\n                }\n            });\n    }\n    Object.defineProperty(AccordionItem.prototype, \"expanded\", {\n        /**\n         * Whether the AccordionItem is expanded.\n         * @return {?}\n         */\n        get: function () { return this._expanded; },\n        /**\n         * @param {?} expanded\n         * @return {?}\n         */\n        set: function (expanded) {\n            // Only emit events and update the internal value if the value changes.\n            if (this._expanded !== expanded) {\n                this._expanded = expanded;\n                if (expanded) {\n                    this.opened.emit();\n                    /**\n                     * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                     * the name value is the id of the accordion.\n                     */\n                    var accordionId = this.accordion ? this.accordion.id : this.id;\n                    this._expansionDispatcher.notify(this.id, accordionId);\n                }\n                else {\n                    this.closed.emit();\n                }\n                // Ensures that the animation will run when the value is set outside of an `@Input`.\n                // This includes cases like the open, close and toggle methods.\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    AccordionItem.prototype.ngOnDestroy = function () {\n        this.destroyed.emit();\n        this._removeUniqueSelectionListener();\n    };\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    AccordionItem.prototype.toggle = function () {\n        this.expanded = !this.expanded;\n    };\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    AccordionItem.prototype.close = function () {\n        this.expanded = false;\n    };\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    AccordionItem.prototype.open = function () {\n        this.expanded = true;\n    };\n    AccordionItem.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @nocollapse\n     */\n    AccordionItem.ctorParameters = function () { return [\n        { type: CdkAccordion, decorators: [{ type: Optional },] },\n        { type: ChangeDetectorRef, },\n        { type: UniqueSelectionDispatcher, },\n    ]; };\n    AccordionItem.propDecorators = {\n        'closed': [{ type: Output },],\n        'opened': [{ type: Output },],\n        'destroyed': [{ type: Output },],\n        'expanded': [{ type: Input },],\n    };\n    return AccordionItem;\n}());\nexport { AccordionItem };\nfunction AccordionItem_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AccordionItem.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    AccordionItem.ctorParameters;\n    /** @type {?} */\n    AccordionItem.propDecorators;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    AccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    AccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    AccordionItem.prototype.destroyed;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    AccordionItem.prototype.id;\n    /** @type {?} */\n    AccordionItem.prototype._expanded;\n    /**\n     * Unregister function for _expansionDispatcher *\n     * @type {?}\n     */\n    AccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    AccordionItem.prototype.accordion;\n    /** @type {?} */\n    AccordionItem.prototype._changeDetectorRef;\n    /** @type {?} */\n    AccordionItem.prototype._expansionDispatcher;\n}\n//# sourceMappingURL=accordion-item.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, forwardRef, Host, Input, Optional, ViewEncapsulation, } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MatAccordion } from './accordion';\nimport { AccordionItem } from './accordion-item';\n/**\n * \\@docs-private\n */\nvar MatExpansionPanelBase = (function (_super) {\n    tslib_1.__extends(MatExpansionPanelBase, _super);\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     */\n    function MatExpansionPanelBase(accordion, _changeDetectorRef, _uniqueSelectionDispatcher) {\n        return _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher) || this;\n    }\n    return MatExpansionPanelBase;\n}(AccordionItem));\nexport { MatExpansionPanelBase };\nexport var /** @type {?} */ _MatExpansionPanelMixinBase = mixinDisabled(MatExpansionPanelBase);\n/**\n * Time and timing curve for expansion panel animations.\n */\nexport var EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * <mat-expansion-panel> component.\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the CdkAccordion directive attached.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MatExpansionPanel = (function (_super) {\n    tslib_1.__extends(MatExpansionPanel, _super);\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     */\n    function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher) {\n        var _this = _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher) || this;\n        /**\n         * Whether the toggle indicator should be hidden.\n         */\n        _this.hideToggle = false;\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        _this._inputChanges = new Subject();\n        _this.accordion = accordion;\n        return _this;\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._getHideToggle = function () {\n        if (this.accordion) {\n            return this.accordion.hideToggle;\n        }\n        return this.hideToggle;\n    };\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._hasSpacing = function () {\n        if (this.accordion) {\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    };\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._getExpandedState = function () {\n        return this.expanded ? 'expanded' : 'collapsed';\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatExpansionPanel.prototype.ngOnChanges = function (changes) {\n        this._inputChanges.next(changes);\n    };\n    /**\n     * @return {?}\n     */\n    MatExpansionPanel.prototype.ngOnDestroy = function () {\n        this._inputChanges.complete();\n    };\n    MatExpansionPanel.decorators = [\n        { type: Component, args: [{styles: [\".mat-expansion-panel{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);box-sizing:content-box;display:block;margin:0;transition:margin 225ms cubic-bezier(.4,0,.2,1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-expansion-panel-content{overflow:hidden}.mat-expansion-panel-body{margin:0 24px 16px;overflow:auto}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion .mat-expansion-panel-spacing:first-child{margin-top:0}.mat-accordion .mat-expansion-panel-spacing:last-child{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button{margin-left:0;margin-right:8px}\"],\n                    selector: 'mat-expansion-panel',\n                    exportAs: 'matExpansionPanel',\n                    template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content><div [class.mat-expanded]=\\\"expanded\\\" class=\\\"mat-expansion-panel-content\\\" [@bodyExpansion]=\\\"_getExpandedState()\\\" [id]=\\\"id\\\"><div class=\\\"mat-expansion-panel-body\\\"><ng-content></ng-content></div><ng-content select=\\\"mat-action-row\\\"></ng-content></div>\",\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['disabled', 'expanded'],\n                    host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    },\n                    providers: [\n                        { provide: AccordionItem, useExisting: forwardRef(function () { return MatExpansionPanel; }) }\n                    ],\n                    animations: [\n                        trigger('bodyExpansion', [\n                            state('collapsed', style({ height: '0px', visibility: 'hidden' })),\n                            state('expanded', style({ height: '*', visibility: 'visible' })),\n                            transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n                        ]),\n                    ],\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionPanel.ctorParameters = function () { return [\n        { type: MatAccordion, decorators: [{ type: Optional }, { type: Host },] },\n        { type: ChangeDetectorRef, },\n        { type: UniqueSelectionDispatcher, },\n    ]; };\n    MatExpansionPanel.propDecorators = {\n        'hideToggle': [{ type: Input },],\n    };\n    return MatExpansionPanel;\n}(_MatExpansionPanelMixinBase));\nexport { MatExpansionPanel };\nfunction MatExpansionPanel_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionPanel.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionPanel.ctorParameters;\n    /** @type {?} */\n    MatExpansionPanel.propDecorators;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.hideToggle;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n}\nvar MatExpansionPanelActionRow = (function () {\n    function MatExpansionPanelActionRow() {\n    }\n    MatExpansionPanelActionRow.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row'\n                    }\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionPanelActionRow.ctorParameters = function () { return []; };\n    return MatExpansionPanelActionRow;\n}());\nexport { MatExpansionPanelActionRow };\nfunction MatExpansionPanelActionRow_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionPanelActionRow.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionPanelActionRow.ctorParameters;\n}\n//# sourceMappingURL=expansion-panel.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { filter } from '@angular/cdk/rxjs';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Host, Input, Renderer2, ViewEncapsulation, } from '@angular/core';\nimport { merge } from 'rxjs/observable/merge';\nimport { Subscription } from 'rxjs/Subscription';\nimport { EXPANSION_PANEL_ANIMATION_TIMING, MatExpansionPanel } from './expansion-panel';\n/**\n * <mat-expansion-panel-header> component.\n *\n * This component corresponds to the header element of an <mat-expansion-panel>.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MatExpansionPanelHeader = (function () {\n    /**\n     * @param {?} renderer\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     */\n    function MatExpansionPanelHeader(renderer, panel, _element, _focusMonitor, _changeDetectorRef) {\n        var _this = this;\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to  subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, filter.call(panel._inputChanges, function (changes) { return !!(changes.hideToggle || changes.disabled); }))\n            .subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        _focusMonitor.monitor(_element.nativeElement, renderer, false);\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._toggle = function () {\n        if (!this.panel.disabled) {\n            this.panel.toggle();\n        }\n    };\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._isExpanded = function () {\n        return this.panel.expanded;\n    };\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._getExpandedState = function () {\n        return this.panel._getExpandedState();\n    };\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._getPanelId = function () {\n        return this.panel.id;\n    };\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._showToggle = function () {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    };\n    /**\n     * Handle keyup event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._keyup = function (event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                return;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype.ngOnDestroy = function () {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    };\n    MatExpansionPanelHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-expansion-panel-header',\n                    styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:0}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-description,.mat-expansion-panel-header-title{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-description,[dir=rtl] .mat-expansion-panel-header-title{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:'';display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\"],\n                    template: \"<span class=\\\"mat-content\\\"><ng-content select=\\\"mat-panel-title\\\"></ng-content><ng-content select=\\\"mat-panel-description\\\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\" class=\\\"mat-expansion-indicator\\\"></span>\",\n                    encapsulation: ViewEncapsulation.None,\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-expansion-panel-header',\n                        'role': 'button',\n                        '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '(click)': '_toggle()',\n                        '(keyup)': '_keyup($event)',\n                        '[@expansionHeight]': \"{\\n        value: _getExpandedState(),\\n        params: {\\n          collapsedHeight: collapsedHeight,\\n          expandedHeight: expandedHeight\\n        }\\n    }\",\n                    },\n                    animations: [\n                        trigger('indicatorRotate', [\n                            state('collapsed', style({ transform: 'rotate(0deg)' })),\n                            state('expanded', style({ transform: 'rotate(180deg)' })),\n                            transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n                        ]),\n                        trigger('expansionHeight', [\n                            state('collapsed', style({\n                                height: '{{collapsedHeight}}',\n                            }), {\n                                params: { collapsedHeight: '48px' },\n                            }),\n                            state('expanded', style({\n                                height: '{{expandedHeight}}'\n                            }), {\n                                params: { expandedHeight: '64px' }\n                            }),\n                            transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n                        ]),\n                    ],\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionPanelHeader.ctorParameters = function () { return [\n        { type: Renderer2, },\n        { type: MatExpansionPanel, decorators: [{ type: Host },] },\n        { type: ElementRef, },\n        { type: FocusMonitor, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    MatExpansionPanelHeader.propDecorators = {\n        'expandedHeight': [{ type: Input },],\n        'collapsedHeight': [{ type: Input },],\n    };\n    return MatExpansionPanelHeader;\n}());\nexport { MatExpansionPanelHeader };\nfunction MatExpansionPanelHeader_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionPanelHeader.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionPanelHeader.ctorParameters;\n    /** @type {?} */\n    MatExpansionPanelHeader.propDecorators;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype._element;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * <mat-panel-description> directive.\n *\n * This direction is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelDescription = (function () {\n    function MatExpansionPanelDescription() {\n    }\n    MatExpansionPanelDescription.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description'\n                    }\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionPanelDescription.ctorParameters = function () { return []; };\n    return MatExpansionPanelDescription;\n}());\nexport { MatExpansionPanelDescription };\nfunction MatExpansionPanelDescription_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionPanelDescription.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionPanelDescription.ctorParameters;\n}\n/**\n * <mat-panel-title> directive.\n *\n * This direction is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelTitle = (function () {\n    function MatExpansionPanelTitle() {\n    }\n    MatExpansionPanelTitle.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title'\n                    }\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionPanelTitle.ctorParameters = function () { return []; };\n    return MatExpansionPanelTitle;\n}());\nexport { MatExpansionPanelTitle };\nfunction MatExpansionPanelTitle_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionPanelTitle.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionPanelTitle.ctorParameters;\n}\n//# sourceMappingURL=expansion-panel-header.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UNIQUE_SELECTION_DISPATCHER_PROVIDER } from '@angular/cdk/collections';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CdkAccordion, MatAccordion } from './accordion';\nimport { MatExpansionPanel, MatExpansionPanelActionRow } from './expansion-panel';\nimport { MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, } from './expansion-panel-header';\nvar MatExpansionModule = (function () {\n    function MatExpansionModule() {\n    }\n    MatExpansionModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, A11yModule],\n                    exports: [\n                        CdkAccordion,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription\n                    ],\n                    declarations: [\n                        CdkAccordion,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription\n                    ],\n                    providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    MatExpansionModule.ctorParameters = function () { return []; };\n    return MatExpansionModule;\n}());\nexport { MatExpansionModule };\nfunction MatExpansionModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatExpansionModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MatExpansionModule.ctorParameters;\n}\n//# sourceMappingURL=expansion-module.js.map","/**\n * Generated bundle index. Do not edit.\n */\nexport { CdkAccordion, MatAccordion, AccordionItem, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatExpansionModule } from './public-api';\nexport { EXPANSION_PANEL_ANIMATION_TIMING as ɵc15, MatExpansionPanelBase as ɵa15, _MatExpansionPanelMixinBase as ɵb15 } from './expansion-panel';\n//# sourceMappingURL=index.js.map"],"names":["tslib_1.__extends","nextId"],"mappings":"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"}